open Syntax

module Env :> {
  type t
  type error

  val empty : t
  val insert : t -> var -> kind -> t
  val lookup : t -> var -> result error kind
} = {
  module M = Map.Make Var

  type t = M.t kind

  datatype error =
    | Unbound of var

  val empty = M.empty
  val insert env v k = M.insert v k env
  val lookup env v = Result.from_option (Unbound v) $ M.lookup v env
}
